import asyncio
from aiogram import Bot, Router, Dispatcher, types, F
from aiogram.filters.command import Command, CommandStart
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.utils.keyboard import InlineKeyboardBuilder

import warnings
import logging
import requests
import datetime
import joblib
import pandas as pd

warnings.filterwarnings("ignore")

logging.basicConfig(level=logging.INFO)
bot = Bot(token="<–¢—É—Ç –º–æ–≥–ª–∞ –±—ã—Ç—å –≤–∞—à–∞ —Ä–µ–∫–ª–∞–º–∞>",default=DefaultBotProperties(parse_mode='HTML'))
dp = Dispatcher()

users_dict = dict()

bern_goal = joblib.load('model/bern_goal.joblib')
bern_desc = joblib.load('model/bern_desc.joblib')
bern_soc = joblib.load('model/bern_soc.joblib')
bern_tasks = joblib.load('model/bern_tasks.joblib')
bern_main = joblib.load('model/bern_main.joblib')
style_model = joblib.load('model/formal.joblib')
vc_desc=joblib.load('model/vc_desc.joblib')
vc_goal=joblib.load('model/vc_goal.joblib')
vc_soc=joblib.load('model/vc_soc.joblib')
vc_tasks=joblib.load('model/vc_tasks.joblib')

class WaitData(StatesGroup):
	waiting_inn = State()
	waiting_project_name = State()
	waiting_project_description = State()
	waiting_soc_signif = State()
	waiting_tasks = State()
	waiting_goal = State()
	waiting_grant_req_money = State()
	waiting_implem_start = State()
	waiting_implem_end = State()
	waiting_soc = State()

def get_name(name:str) -> str:
	return name.replace('&','&amp').replace('<','&lt').replace('>','&gt')

def check_inn(inn:int) -> bool:
	inn = str(inn)
	if len(inn) != 10:
		return False
	else:
		s = 0
		k = [2,4,10,3,5,9,4,6,8]
		for i in range(9):
			s = int(inn[i])*k[i] + s
		if (s%11)%10 == int(inn[-1]):
			return True
		else:
			return False

async def model(message:types.Message,description:str,direction:str,tasks:str,goal:str,money_req_grant:int,work_days:int,soc:int) -> None:
	vc_direction = {
		'–í—ã—è–≤–ª–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–ª–æ–¥—ã—Ö —Ç–∞–ª–∞–Ω—Ç–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –∫—É–ª—å—Ç—É—Ä—ã –∏ –∏—Å–∫—É—Å—Å—Ç–≤–∞':[0,0,0,0,0,0,1,0,0,0,0,0,0],
		'–ó–∞—â–∏—Ç–∞ –ø—Ä–∞–≤ –∏ —Å–≤–æ–±–æ–¥ —á–µ–ª–æ–≤–µ–∫–∞ –∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∑–∞—â–∏—Ç–∞ –ø—Ä–∞–≤ –∑–∞–∫–ª—é—á–µ–Ω–Ω—ã—Ö':[1,0,0,0,0,0,0,0,0,0,0,0,0],
		'–û—Ö—Ä–∞–Ω–∞ –∑–¥–æ—Ä–æ–≤—å—è –≥—Ä–∞–∂–¥–∞–Ω, –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∞ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏':[0,1,0,0,0,0,0,0,0,0,0,0,0],
		'–û—Ö—Ä–∞–Ω–∞ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã –∏ –∑–∞—â–∏—Ç–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö':[0,0,1,0,0,0,0,0,0,0,0,0,0],
		'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–ª–æ–¥–µ–∂–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤–∏–¥—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–µ–π 31 –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–∞ –æ—Ç 12 —è–Ω–≤–∞—Ä—è 1996 –≥. ‚Ññ 7-–§–ó ¬´–û –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö¬ª':[0,0,0,1,0,0,0,0,0,0,0,0,0],
		'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–ª–æ–¥–µ–∂–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤–∏–¥—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–µ–π 31.1 –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–∞ –æ—Ç 12 —è–Ω–≤–∞—Ä—è 1996 –≥. ‚Ññ 7-–§–ó ¬´–û –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö¬ª':[0,0,0,0,1,0,0,0,0,0,0,0,0],
		'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –∫—É–ª—å—Ç—É—Ä—ã –∏ –∏—Å–∫—É—Å—Å—Ç–≤–∞':[0,0,0,0,0,1,0,0,0,0,0,0,0],
		'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –Ω–∞—É–∫–∏, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, –ø—Ä–æ—Å–≤–µ—â–µ–Ω–∏—è':[0,0,0,0,0,0,1,0,0,0,0,0,0],
		'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–µ–º—å–∏, –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–∞, –æ—Ç—Ü–æ–≤—Å—Ç–≤–∞ –∏ –¥–µ—Ç—Å—Ç–≤–∞':[0,0,0,0,0,0,0,1,0,0,0,0,0],
		'–†–∞–∑–≤–∏—Ç–∏–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç–æ–≤ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞':[0,0,0,0,0,0,0,0,1,0,0,0,0],
		'–†–∞–∑–≤–∏—Ç–∏–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –¥–∏–ø–ª–æ–º–∞—Ç–∏–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤':[0,0,0,0,0,0,0,0,0,1,0,0,0],
		'–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏':[1,0,0,0,0,0,0,0,0,0,1,0,0],
		'–°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –∑–∞—â–∏—Ç–∞ –≥—Ä–∞–∂–¥–∞–Ω':[0,0,0,0,0,0,0,0,0,0,0,1,0],
		'–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–µ–∂–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏ –º–µ–∂—Ä–µ–ª–∏–≥–∏–æ–∑–Ω–æ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è':[0,0,0,0,0,0,0,0,0,0,0,0,1]
	}

	vector_desc = vc_desc.transform(pd.Series([description]))
	vector_goal = vc_goal.transform(pd.Series([goal]))
	vector_tasks = vc_goal.transform(pd.Series([tasks]))
	vector_soc = vc_soc.transform(pd.Series([soc]))
	vector_direct = vc_direction[direction]

	form_desc = style_model.predict_proba(vector_desc)[0][1]
	form_goal = style_model.predict_proba(vector_goal)[0][1]
	form_tasks = style_model.predict_proba(vector_tasks)[0][1]
	form_soc = style_model.predict_proba(vector_soc)[0][1]

	desc_len = len(description.split(' '))
	goal_len = len(goal.split(' '))
	tasks_len = len(tasks.split(' '))
	soc_len = len(soc.split(' '))

	vector_data = pd.concat(
		[
			pd.DataFrame([money_req_grant]),
			pd.DataFrame([form_desc]),
			pd.DataFrame([form_soc]),
			pd.DataFrame([form_tasks]),
			pd.DataFrame([form_goal]),
			pd.DataFrame([desc_len]),
			pd.DataFrame([soc_len]),
			pd.DataFrame([tasks_len]),
			pd.DataFrame([goal_len]),
			pd.DataFrame([work_days]),
			pd.DataFrame([datetime.datetime.now().year]),
			pd.DataFrame([vector_direct]),
			pd.DataFrame(vector_goal.toarray()),
			pd.DataFrame(vector_tasks.toarray()),
			pd.DataFrame(vector_soc.toarray()),
			pd.DataFrame(vector_desc.toarray())
		]
	,axis='columns')

	df_1 = pd.DataFrame([form_desc])
	df_2 = pd.DataFrame([desc_len])
	df_3 = pd.DataFrame(vector_desc.toarray())
	df_1 = pd.concat([df_1,df_2,df_3],axis='columns',ignore_index=True)

	desc_percent= round(bern_desc.predict_proba(df_1)[0][1]*100,2)
	goal_percent= round(bern_goal.predict_proba(pd.concat([pd.DataFrame([form_goal]),pd.DataFrame([goal_len]),pd.DataFrame(vector_goal.toarray())],axis='columns'))[0][1]*100,2)
	soc_percent= round(bern_soc.predict_proba(pd.concat([pd.DataFrame([form_soc]),pd.DataFrame([soc_len]),pd.DataFrame(vector_soc.toarray())],axis='columns'))[0][1]*100,2)
	tasks_percent= round(bern_tasks.predict_proba(pd.concat([pd.DataFrame([form_tasks]),pd.DataFrame([tasks_len]),pd.DataFrame(vector_tasks.toarray())],axis='columns'))[0][1]*100,2)
	all_answer = '–ü—Ä–æ–µ–∫—Ç —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ø–æ–ª—É—á–∏—Ç –≥—Ä–∞–Ω—Çüéâ' if bern_main.predict_proba(vector_data)[0][1]*100 == 100 else '–ü—Ä–æ–µ–∫—Ç —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏—Ç –≥—Ä–∞–Ω—Çüò≠'

	hype_desc = 'üëç' if desc_percent >=50 else 'üëé'
	hype_goal = 'üëç' if goal_percent >=50 else 'üëé'
	hype_soc = 'üëç' if soc_percent >=50 else 'üëé'
	hype_tasks = 'üëç' if tasks_percent >=50 else 'üëé'

	await message.answer(f'<i><b><u>‚ú®–û—Ü–µ–Ω–∫–∞ –∑–∞—è–≤–∫–∏</u></b></i>\n<b>–®–∞–Ω—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:</b> {all_answer}\n\n<b>–û—Ü–µ–Ω–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è:</b> {desc_percent}/100{hype_desc}\n<b>–û—Ü–µ–Ω–∫–∞ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏:</b> {soc_percent}/100{hype_soc}\n<b>–û—Ü–µ–Ω–∫–∞ –∑–∞–¥–∞—á:</b> {tasks_percent}/100{hype_tasks}\n<b>–û—Ü–µ–Ω–∫–∞ —Ü–µ–ª–∏:</b> {goal_percent}/100{hype_goal}',reply_markup=types.ReplyKeyboardMarkup(keyboard=[[types.KeyboardButton(text='–ù–∞—á–∞—Ç—å‚ú®')]],one_time_keyboard=True,resize_keyboard=True))

async def data_register(message:types.Message,step:int,state:FSMContext):
	if step == 0:
		users_dict[message.from_user.id] = dict()
		await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –≤–∞—à–µ–π –ù–ö–û:</i>',reply_markup=None)
		await state.set_state(WaitData.waiting_inn)
	elif step == 1:
		if message.text is None:
			await message.answer('<b>üîç–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!</b> ‚öÜ_‚öÜ')
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –≤–∞—à–µ–π –ù–ö–û:</i>')
		else:
			try:
				inn = int(message.text)
				if check_inn(inn):
					cookies = {
						'_ym_uid': '1720186151535325611',
						'_ym_d': '1720186151',
						'_ym_isad': '2',
						'_ym_visorc': 'w',
						'qrator_msid': '1720186148.507.xqd605KOD4pgQVUP-pln4hk1s3j92e8bh4th91he9thi0l099',
					}

					headers = {
						'Accept': 'application/json, text/plain, */*',
						'Accept-Language': 'ru,en;q=0.9,es;q=0.8',
						'Connection': 'keep-alive',
						'Referer': 'https://bankrot.fedresurs.ru/bankrupts?searchString=6670044205&regionId=all&isActiveLegalCase=null&offset=0&limit=15',
						'Sec-Fetch-Dest': 'empty',
						'Sec-Fetch-Mode': 'cors',
						'Sec-Fetch-Site': 'same-origin',
						'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 YaBrowser/24.6.0.0 Safari/537.36',
						'sec-ch-ua': '"Chromium";v="124", "YaBrowser";v="24.6", "Not-A.Brand";v="99", "Yowser";v="2.5"',
						'sec-ch-ua-mobile': '?0',
						'sec-ch-ua-platform': '"Linux"',
					}

					params = {
						'searchString': inn,
						'isActiveLegalCase': 'null',
						'limit': '15',
						'offset': '0',
					}

					response = requests.get('https://bankrot.fedresurs.ru/backend/cmpbankrupts', params=params, cookies=cookies, headers=headers).json()
					if response['total'] == 0:
						await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:</i>',reply_markup=None)
						await state.set_state(WaitData.waiting_project_name)
					else:
						await message.answer('<b>‚ùå–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è-–±–∞–Ω–∫—Ä–æ—Ç –Ω–µ –º–æ–∂–µ—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ —Å–≤—è–∑–∏ —Å <a href="https://–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–µ–≥—Ä–∞–Ω—Ç—ã.—Ä—Ñ/public/api/v1/file/get-document?filename=e1d12373-3ae5-47f3-99ce-667a673aa803.pdf">–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –æ –∫–æ–Ω–∫—É—Ä—Å–µ "–§–æ–Ω–¥–∞ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏—Ö –≥—Ä–∞–Ω—Ç–æ–≤"</a>!</b> œà(._. )>',link_preview_options=types.LinkPreviewOptions(is_disabled=True),reply_markup=types.ReplyKeyboardMarkup(keyboard=[[types.KeyboardButton(text='–ù–∞—á–∞—Ç—å‚ú®')]],one_time_keyboard=True,resize_keyboard=True))
						del users_dict[message.from_user.id]
						return
				else:
					await message.answer('<b>‚ùå–í–≤–µ–¥–µ–Ω–Ω—ã–π –ò–ù–ù –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π! œà(._. )></b>')
					await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –≤–∞—à–µ–π –ù–ö–û:</i>')
			except ValueError:
				await message.answer('<b>üîç–ò–ù–ù –ù–ö–û –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!</b> ‚öÜ_‚öÜ')
				await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –≤–∞—à–µ–π –ù–ö–û:</i>')
	elif step == 2:
		if message.text is None:
			await message.answer('<b>üîç–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!</b> ‚öÜ_‚öÜ')
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:</i>')
		else:
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:</i>',reply_markup=None)
			await state.set_state(WaitData.waiting_project_description)
	elif step==3:
		if message.text is None:
			await message.answer('üîç<i>–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!</i> ‚öÜ_‚öÜ')
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:</i>',reply_markup=None)
		else:
			users_dict[message.from_user.id][2] = message.text

			builder = InlineKeyboardBuilder()
			builder.row(types.InlineKeyboardButton(text='1',callback_data='Direction_1'),types.InlineKeyboardButton(text='2',callback_data='Direction_2'),types.InlineKeyboardButton(text='3',callback_data='Direction_3'),types.InlineKeyboardButton(text='4',callback_data='Direction_4'),types.InlineKeyboardButton(text='5',callback_data='Direction_5'),types.InlineKeyboardButton(text='6',callback_data='Direction_6'),types.InlineKeyboardButton(text='7',callback_data='Direction_7'))
			builder.row(types.InlineKeyboardButton(text='8',callback_data='Direction_8'),types.InlineKeyboardButton(text='9',callback_data='Direction_9'),types.InlineKeyboardButton(text='10',callback_data='Direction_10'),types.InlineKeyboardButton(text='11',callback_data='Direction_11'),types.InlineKeyboardButton(text='12',callback_data='Direction_12'),types.InlineKeyboardButton(text='13',callback_data='Direction_13'),types.InlineKeyboardButton(text='14',callback_data='Direction_14'))
			await message.answer(f'<i>üë®‚Äçüíª–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—É—Ä—Å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∞:</i>\n\n<b>1 - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏\n2-–†–∞–∑–≤–∏—Ç–∏–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç–æ–≤ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞\n3-–û—Ö—Ä–∞–Ω–∞ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã\n4-–ö—É–ª—å—Ç—É—Ä–∞ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–∞\n5-–û—Ö—Ä–∞–Ω–∞ –∑–¥–æ—Ä–æ–≤—å—è –∏ –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∞ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏\n6-–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–µ–º—å–∏, –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–∞, –æ—Ç—Ü–æ–≤—Å—Ç–≤–∞ –∏ –¥–µ—Ç—Å—Ç–≤–∞\n7-–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–µ–∂–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏ –º–µ–∂—Ä–µ–ª–∏–≥–∏–æ–∑–Ω–æ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è\n8-–°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ –∑–∞—â–∏—Ç–∞ –≥—Ä–∞–∂–¥–∞–Ω\n9-–ú–æ–ª–æ–¥–µ–∂–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã(—Å—Ç–∞—Ç—å—è 31.1 –§–ó)\n10-–ú–æ–ª–æ–¥–µ–∂–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã(—Å—Ç–∞—Ç—å—è 31 –§–ó)\n11-–ó–∞—â–∏—Ç–∞ –ø—Ä–∞–≤ –∏ —Å–≤–æ–±–æ–¥ —á–µ–ª–æ–≤–µ–∫–∞\n12-–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –¥–∏–ø–ª–æ–º–∞—Ç–∏—è\n13-–ù–∞—É–∫–∞ –∏ –ø—Ä–æ—Å–≤–µ—â–µ–Ω–∏–µ\n14-–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–ª–æ–¥—ã—Ö —Ç–∞–ª–∞–Ω—Ç–æ–≤</b>',reply_markup=builder.as_markup())
	elif step == 4:
		await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á–∏ –ø—Ä–æ–µ–∫—Ç–∞:</i>',reply_markup=None)
		await state.set_state(WaitData.waiting_tasks)
	elif step == 5:
		if message.text is None:
			await message.answer('<b>üîç–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!</b> ‚öÜ_‚öÜ')
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á–∏ –ø—Ä–æ–µ–∫—Ç–∞:</i>')
		else:
			users_dict[message.from_user.id][4] = message.text
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞:</i>',reply_markup=None)
			await state.set_state(WaitData.waiting_goal)
	elif step == 6:
		if message.text is None:
			await message.answer('<b>üîç–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!</b> ‚öÜ_‚öÜ')
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞:</i>')
		else:
			users_dict[message.from_user.id][5] = message.text
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞:</i>',reply_markup=None)
			await state.set_state(WaitData.waiting_soc)
	elif step == 7:
		if message.text is None:
			await message.answer('<b>üîç–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!</b> ‚öÜ_‚öÜ')
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞:</i>')
		else:
			users_dict[message.from_user.id][6] = message.text
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—É—é —Å—É–º–º—É –≥—Ä–∞–Ω—Ç–∞:</i>',reply_markup=None)
			await state.set_state(WaitData.waiting_grant_req_money)
	elif step == 8:
		if message.text is None:
			await message.answer('<b>üîç–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!</b> ‚öÜ_‚öÜ')
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—É—é —Å—É–º–º—É –≥—Ä–∞–Ω—Ç–∞:</i>')
		else:
			try:
				money_req_grant = int(float(message.text))
				if money_req_grant < 0:
					await message.answer('<b>ü§î–í—ã —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ–±—ã —É –≤–∞—Å –∑–∞ –≥—Ä–∞–Ω—Ç –æ—Ç–æ–±—Ä–∞–ª–∏ –¥–µ–Ω—å–≥–∏?</b> ‚öÜ_‚öÜ')
					await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—É—é —Å—É–º–º—É –≥—Ä–∞–Ω—Ç–∞:</i>')
				else:
					users_dict[message.from_user.id][7] = money_req_grant
					await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É <b>–Ω–∞—á–∞–ª–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏</b> –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:</i>',reply_markup=None)
					await state.set_state(WaitData.waiting_implem_start)
			except ValueError:
				await message.answer('<b>‚ùå–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—É–º–º–∞ –≥—Ä–∞–Ω—Ç–∞ - —á–∏—Å–ª–æ! œà(._. )></b>')
				await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—É—é —Å—É–º–º—É –≥—Ä–∞–Ω—Ç–∞:</i>')
	elif step == 9:
		if message.text is None:
			await message.answer('<b>üîç–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!</b> ‚öÜ_‚öÜ')
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É <b>–Ω–∞—á–∞–ª–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏</b> –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:</i>')
		else:
			try:
				d,m,y = map(int,message.text.split('.'))
				date = datetime.datetime(day=d,month=m,year=y)
				users_dict[message.from_user.id][8] = date
				await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É <b>–∫–æ–Ω—Ü–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏</b> –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì</i>',reply_markup=None)
				await state.set_state(WaitData.waiting_implem_end)
			except Exception as e:
				await message.answer('<b>‚ùå–í–≤–µ–¥–µ–Ω–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è! œà(._. )></b>')
				await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É <b>–Ω–∞—á–∞–ª–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏</b> –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:</i>')
	elif step == 10:
		if message.text is None:
			await message.answer('<b>üîç–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!</b> ‚öÜ_‚öÜ')
			await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É <b>–∫–æ–Ω—Ü–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏</b> –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:</i>')
		else:
			try:
				d,m,y = map(int,message.text.split('.'))
				date = datetime.datetime(day=d,month=m,year=y)
				users_dict[message.from_user.id][9] = date

				await state.clear()
				m=await message.answer('<i>‚ú®–ù–∞—á–∏–Ω–∞—é —Ç–≤–æ—Ä–∏—Ç—å —á—É–¥–µ—Å–∞...</i>',reply_markup=None)

				description = users_dict[message.from_user.id][2]
				direction = users_dict[message.from_user.id][3]
				tasks = users_dict[message.from_user.id][4]
				goal = users_dict[message.from_user.id][5]
				soc = users_dict[message.from_user.id][6]
				money_req_grant = users_dict[message.from_user.id][7]
				work_days = int(abs((users_dict[message.from_user.id][9]-users_dict[message.from_user.id][8]).total_seconds())//86400)

				await model(message,description,direction,tasks,goal,money_req_grant,work_days,soc)
				await m.delete()
				del users_dict[message.from_user.id]
				return
			except Exception as e:
			 	print(e)
			 	await message.answer('<b>‚ùå–í–≤–µ–¥–µ–Ω–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è! œà(._. )></b>')
			 	await message.answer(f'üë®‚Äçüíª<i>–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∫–æ–Ω—Ü–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:</i>')

@dp.message(CommandStart())
@dp.message(Command('help'))
async def cmd_start(message:types.Message,state:FSMContext) -> None:
	await state.clear()
	await message.answer(
		f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {get_name(message.from_user.first_name)}! –Ø <b>–ì—Ä–∞–Ω—Ç–û—Ä–∞–∫—É–ªüßô‚Äç‚ôÇÔ∏è</b>\n–Ø –ø–æ–ø—Ä–æ–±—É—é –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –í–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–¥–∞—á–∏ –í–∞—à–µ–π –∑–∞—è–≤–∫–∏ –Ω–∞ –≥—Ä–∞–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –ú–∞—à–∏–Ω–Ω–æ–≥–æ –û–±—É—á–µ–Ω–∏—è.\n\n<b><i>–ó–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ?</i></b>\n‚Ä¢–°–º–æ–∂–µ—Ç–µ –æ—Ü–µ–Ω–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–≤–æ–µ–π –∑–∞—è–≤–∫–∏\n‚Ä¢–í—ã —Å–º–æ–∂–µ—Ç–µ —É—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞—Ç—å —Å–≤–æ—é –∑–∞—è–≤–∫—É –ø–µ—Ä–µ–¥ –ø–æ–¥–∞—á–µ–π',
		reply_markup=types.ReplyKeyboardMarkup(keyboard=[[types.KeyboardButton(text='–ù–∞—á–∞—Ç—å‚ú®')]],one_time_keyboard=True,resize_keyboard=True)
	)

@dp.message(F.text == '–ù–∞—á–∞—Ç—å‚ú®')
async def cmd_predict(message:types.Message,state:FSMContext) -> None:
	await state.clear()
	if message.from_user.id not in users_dict.keys():
		await data_register(message,0,state)
	else:
		await data_register(message,max(list(users_dict[message.from_user.id].keys()))+1,state)

@dp.message(WaitData.waiting_inn)
async def handler_inn(message:types.Message,state:FSMContext) -> None:
	await data_register(message,1,state)

@dp.message(WaitData.waiting_project_name)
async def handler_project_name(message:types.Message,state:FSMContext) -> None:
	await data_register(message,2,state)

@dp.message(WaitData.waiting_project_description)
async def handler_project_description(message:types.Message,state:FSMContext) -> None:
	await data_register(message,3,state)

@dp.callback_query(F.data.startswith('Direction_'))
async def handler_direction(callback:types.CallbackQuery,state:FSMContext) -> None:
	number_dict = {
		'1':'–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏',
		'2':'–†–∞–∑–≤–∏—Ç–∏–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç–æ–≤ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞',
		'3':'–û—Ö—Ä–∞–Ω–∞ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã –∏ –∑–∞—â–∏—Ç–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö',
		'4':'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –∫—É–ª—å—Ç—É—Ä—ã –∏ –∏—Å–∫—É—Å—Å—Ç–≤–∞',
		'5':'–û—Ö—Ä–∞–Ω–∞ –∑–¥–æ—Ä–æ–≤—å—è –≥—Ä–∞–∂–¥–∞–Ω, –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∞ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏',
		'6':'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–µ–º—å–∏, –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–∞, –æ—Ç—Ü–æ–≤—Å—Ç–≤–∞ –∏ –¥–µ—Ç—Å—Ç–≤–∞',
		'7':'–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º–µ–∂–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏ –º–µ–∂—Ä–µ–ª–∏–≥–∏–æ–∑–Ω–æ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è',
		'8':'–°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –∑–∞—â–∏—Ç–∞ –≥—Ä–∞–∂–¥–∞–Ω',
		'9':'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–ª–æ–¥–µ–∂–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤–∏–¥—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–µ–π 31.1 –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–∞ –æ—Ç 12 —è–Ω–≤–∞—Ä—è 1996 –≥. ‚Ññ 7-–§–ó ¬´–û –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö¬ª',
		'10':'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–ª–æ–¥–µ–∂–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤–∏–¥—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–µ–π 31 –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–∞ –æ—Ç 12 —è–Ω–≤–∞—Ä—è 1996 –≥. ‚Ññ 7-–§–ó ¬´–û –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö¬ª',
		'11':'–ó–∞—â–∏—Ç–∞ –ø—Ä–∞–≤ –∏ —Å–≤–æ–±–æ–¥ —á–µ–ª–æ–≤–µ–∫–∞ –∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∑–∞—â–∏—Ç–∞ –ø—Ä–∞–≤ –∑–∞–∫–ª—é—á–µ–Ω–Ω—ã—Ö',
		'12':'–†–∞–∑–≤–∏—Ç–∏–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –¥–∏–ø–ª–æ–º–∞—Ç–∏–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤',
		'13':'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –Ω–∞—É–∫–∏, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, –ø—Ä–æ—Å–≤–µ—â–µ–Ω–∏—è',
		'14':'–í—ã—è–≤–ª–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–ª–æ–¥—ã—Ö —Ç–∞–ª–∞–Ω—Ç–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –∫—É–ª—å—Ç—É—Ä—ã –∏ –∏—Å–∫—É—Å—Å—Ç–≤–∞'
	}
	category = number_dict[callback.data.split('_')[1]]
	users_dict[callback.from_user.id][3] = category
	await callback.message.answer(f'<i>–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {category}</i>')
	await callback.message.delete()
	await data_register(callback.message,4,state)

@dp.message(WaitData.waiting_tasks)
async def handler_tasks(message:types.Message,state:FSMContext) -> None:
	await data_register(message,5,state)

@dp.message(WaitData.waiting_goal)
async def handler_goal(message:types.Message,state:FSMContext) -> None:
	await data_register(message,6,state)

@dp.message(WaitData.waiting_soc)
async def handler_soc(message:types.Message,state:FSMContext) -> None:
	await data_register(message,7,state)

@dp.message(WaitData.waiting_grant_req_money)
async def handler_grant_req_money(message:types.Message,state:FSMContext) -> None:
	await data_register(message,8,state)

@dp.message(WaitData.waiting_implem_start)
async def handler_implem_start(message:types.Message,state:FSMContext) -> None:
	await data_register(message,9,state)

@dp.message(WaitData.waiting_implem_end)
async def handler_implem_end(message:types.Message,state:FSMContext) -> None:
	await data_register(message,10,state)

async def main():
	await dp.start_polling(bot)

if __name__ == "__main__":
	asyncio.run(main())

